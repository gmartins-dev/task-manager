generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id           String    @id @default(cuid()) @db.Char(25)
  email        String    @unique @db.VarChar(255)
  passwordHash String    @db.VarChar(255)
  name         String    @db.VarChar(100)
  tokenVersion Int       @default(0)
  projects     Project[]
  tasks        Task[]    @relation("TaskAssignee")
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Project {
  id          String   @id @default(cuid()) @db.Char(25)
  name        String   @db.VarChar(200)
  description String?  @db.Text
  ownerId     String   @db.Char(25)
  owner       User     @relation(fields: [ownerId], references: [id])
  tasks       Task[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([ownerId])
}

enum TaskStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
}

model Task {
  id          String    @id @default(cuid()) @db.Char(25)
  title       String    @db.VarChar(200)
  description String?   @db.Text
  status      TaskStatus @default(PENDING)
  dueDate     DateTime  @default(now())
  projectId   String    @db.Char(25)
  project     Project   @relation(fields: [projectId], references: [id], onDelete: Cascade)
  assigneeId  String?   @db.Char(25)
  assignee    User?     @relation("TaskAssignee", fields: [assigneeId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@index([projectId])
  @@index([assigneeId])
}
